Terminale, die in Grammatik unbenutzt sind

    UMINUS
    LOWER_THAN_ELSE


Zustand 136 Konflikte: 1 Schiebe/Reduziere


Grammatik

    0 $accept: program $end

    1 program: programstart

    2 programstart: %empty
    3             | programstart declassignment ';'
    4             | programstart functiondefinition

    5 functiondefinition: type id '(' ')' '{' statementlist '}'
    6                   | type id '(' parameterlist ')' '{' statementlist '}'

    7 parameterlist: type id
    8              | parameterlist ',' type id

    9 functioncall: id '(' ')'
   10             | id '(' multiassignment ')'

   11 multiassignment: assignment
   12                | multiassignment ',' assignment

   13 statementlist: %empty
   14              | statementlist statblock

   15 statement: ifstatement
   16          | forstatement
   17          | whilestatement
   18          | returnstatement ';'
   19          | dowhilestatement ';'
   20          | printf ';'
   21          | declassignment ';'
   22          | statassignment ';'
   23          | functioncall ';'

   24 statblock: '{' statementlist '}'
   25          | statement

   26 ifstatement: "if" '(' assignment ')' statblock
   27            | "if" '(' assignment ')' statblock "else" statblock

   28 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' statblock
   29             | "for" '(' declassignment ';' expr ';' statassignment ')' statblock

   30 dowhilestatement: "do" statblock "while" '(' assignment ')'

   31 whilestatement: "while" '(' assignment ')' statblock

   32 returnstatement: "return"
   33                | "return" assignment

   34 printf: "printf" '(' assignment ')'
   35       | "printf" '(' "string literal" ')'

   36 declassignment: type id
   37               | type id '=' assignment

   38 statassignment: id '=' assignment

   39 assignment: statassignment
   40           | expr

   41 expr: simpexpr
   42     | simpexpr "==" simpexpr
   43     | simpexpr "!=" simpexpr
   44     | simpexpr "<=" simpexpr
   45     | simpexpr ">=" simpexpr
   46     | simpexpr "<" simpexpr
   47     | simpexpr ">" simpexpr

   48 simpexpr: '-' term extraterm
   49         | term extraterm

   50 extraterm: %empty
   51          | extraterm '+' term
   52          | extraterm '-' term
   53          | extraterm "||" term

   54 term: factor termneu

   55 termneu: %empty
   56        | termneu '*' factor
   57        | termneu '/' factor
   58        | termneu "&&" factor

   59 factor: "integer literal"
   60       | "float literal"
   61       | "boolean literal"
   62       | functioncall
   63       | id
   64       | '(' assignment ')'

   65 type: "bool"
   66     | "float"
   67     | "int"
   68     | "void"

   69 id: "identifier"


Terminale und die Regeln, in denen sie verwendet werden

    $end (0) 0
    '(' (40) 5 6 9 10 26 27 28 29 30 31 34 35 64
    ')' (41) 5 6 9 10 26 27 28 29 30 31 34 35 64
    '*' (42) 56
    '+' (43) 51
    ',' (44) 8 12
    '-' (45) 48 52
    '/' (47) 57
    ';' (59) 3 18 19 20 21 22 23 28 29
    '=' (61) 37 38
    '{' (123) 5 6 24
    '}' (125) 5 6 24
    error (256)
    "&&" (258) 58
    "||" (259) 53
    "==" (260) 42
    "!=" (261) 43
    "<=" (262) 44
    ">=" (263) 45
    "<" (264) 46
    ">" (265) 47
    "bool" (266) 65
    "do" (267) 30
    "else" (268) 27
    "float" (269) 66
    "for" (270) 28 29
    "if" (271) 26 27
    "int" (272) 67
    "printf" (273) 34 35
    "return" (274) 32 33
    "void" (275) 68
    "while" (276) 30 31
    "integer literal" (277) 59
    "float literal" (278) 60
    "boolean literal" (279) 61
    "string literal" (280) 35
    "identifier" (281) 69
    UMINUS (282)
    LOWER_THAN_ELSE (283)


Nicht-Terminal und die Regeln, in denen sie verwendet werden

    $accept (40)
        auf der linken Seite: 0
    program (41)
        auf der linken Seite: 1
        auf der rechten Seite: 0
    programstart (42)
        auf der linken Seite: 2 3 4
        auf der rechten Seite: 1 3 4
    functiondefinition (43)
        auf der linken Seite: 5 6
        auf der rechten Seite: 4
    parameterlist (44)
        auf der linken Seite: 7 8
        auf der rechten Seite: 6 8
    functioncall (45)
        auf der linken Seite: 9 10
        auf der rechten Seite: 23 62
    multiassignment (46)
        auf der linken Seite: 11 12
        auf der rechten Seite: 10 12
    statementlist (47)
        auf der linken Seite: 13 14
        auf der rechten Seite: 5 6 14 24
    statement (48)
        auf der linken Seite: 15 16 17 18 19 20 21 22 23
        auf der rechten Seite: 25
    statblock (49)
        auf der linken Seite: 24 25
        auf der rechten Seite: 14 26 27 28 29 30 31
    ifstatement (50)
        auf der linken Seite: 26 27
        auf der rechten Seite: 15
    forstatement (51)
        auf der linken Seite: 28 29
        auf der rechten Seite: 16
    dowhilestatement (52)
        auf der linken Seite: 30
        auf der rechten Seite: 19
    whilestatement (53)
        auf der linken Seite: 31
        auf der rechten Seite: 17
    returnstatement (54)
        auf der linken Seite: 32 33
        auf der rechten Seite: 18
    printf (55)
        auf der linken Seite: 34 35
        auf der rechten Seite: 20
    declassignment (56)
        auf der linken Seite: 36 37
        auf der rechten Seite: 3 21 29
    statassignment (57)
        auf der linken Seite: 38
        auf der rechten Seite: 22 28 29 39
    assignment (58)
        auf der linken Seite: 39 40
        auf der rechten Seite: 11 12 26 27 30 31 33 34 37 38 64
    expr (59)
        auf der linken Seite: 41 42 43 44 45 46 47
        auf der rechten Seite: 28 29 40
    simpexpr (60)
        auf der linken Seite: 48 49
        auf der rechten Seite: 41 42 43 44 45 46 47
    extraterm (61)
        auf der linken Seite: 50 51 52 53
        auf der rechten Seite: 48 49 51 52 53
    term (62)
        auf der linken Seite: 54
        auf der rechten Seite: 48 49 51 52 53
    termneu (63)
        auf der linken Seite: 55 56 57 58
        auf der rechten Seite: 54 56 57 58
    factor (64)
        auf der linken Seite: 59 60 61 62 63 64
        auf der rechten Seite: 54 56 57 58
    type (65)
        auf der linken Seite: 65 66 67 68
        auf der rechten Seite: 5 6 7 8 36 37
    id (66)
        auf der linken Seite: 69
        auf der rechten Seite: 5 6 7 8 9 10 36 37 38 63


Zustand 0

    0 $accept: . program $end

    $default  reduziere mit Regel 2 (programstart)

    program       gehe zu Zustand 1 über
    programstart  gehe zu Zustand 2 über


Zustand 1

    0 $accept: program . $end

    $end  schiebe und gehe zu Zustand 3 über


Zustand 2

    1 program: programstart .
    3 programstart: programstart . declassignment ';'
    4             | programstart . functiondefinition

    "bool"   schiebe und gehe zu Zustand 4 über
    "float"  schiebe und gehe zu Zustand 5 über
    "int"    schiebe und gehe zu Zustand 6 über
    "void"   schiebe und gehe zu Zustand 7 über

    $default  reduziere mit Regel 1 (program)

    functiondefinition  gehe zu Zustand 8 über
    declassignment      gehe zu Zustand 9 über
    type                gehe zu Zustand 10 über


Zustand 3

    0 $accept: program $end .

    $default  annehmen


Zustand 4

   65 type: "bool" .

    $default  reduziere mit Regel 65 (type)


Zustand 5

   66 type: "float" .

    $default  reduziere mit Regel 66 (type)


Zustand 6

   67 type: "int" .

    $default  reduziere mit Regel 67 (type)


Zustand 7

   68 type: "void" .

    $default  reduziere mit Regel 68 (type)


Zustand 8

    4 programstart: programstart functiondefinition .

    $default  reduziere mit Regel 4 (programstart)


Zustand 9

    3 programstart: programstart declassignment . ';'

    ';'  schiebe und gehe zu Zustand 11 über


Zustand 10

    5 functiondefinition: type . id '(' ')' '{' statementlist '}'
    6                   | type . id '(' parameterlist ')' '{' statementlist '}'
   36 declassignment: type . id
   37               | type . id '=' assignment

    "identifier"  schiebe und gehe zu Zustand 12 über

    id  gehe zu Zustand 13 über


Zustand 11

    3 programstart: programstart declassignment ';' .

    $default  reduziere mit Regel 3 (programstart)


Zustand 12

   69 id: "identifier" .

    $default  reduziere mit Regel 69 (id)


Zustand 13

    5 functiondefinition: type id . '(' ')' '{' statementlist '}'
    6                   | type id . '(' parameterlist ')' '{' statementlist '}'
   36 declassignment: type id .
   37               | type id . '=' assignment

    '('  schiebe und gehe zu Zustand 14 über
    '='  schiebe und gehe zu Zustand 15 über

    $default  reduziere mit Regel 36 (declassignment)


Zustand 14

    5 functiondefinition: type id '(' . ')' '{' statementlist '}'
    6                   | type id '(' . parameterlist ')' '{' statementlist '}'

    "bool"   schiebe und gehe zu Zustand 4 über
    "float"  schiebe und gehe zu Zustand 5 über
    "int"    schiebe und gehe zu Zustand 6 über
    "void"   schiebe und gehe zu Zustand 7 über
    ')'      schiebe und gehe zu Zustand 16 über

    parameterlist  gehe zu Zustand 17 über
    type           gehe zu Zustand 18 über


Zustand 15

   37 declassignment: type id '=' . assignment

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall    gehe zu Zustand 24 über
    statassignment  gehe zu Zustand 25 über
    assignment      gehe zu Zustand 26 über
    expr            gehe zu Zustand 27 über
    simpexpr        gehe zu Zustand 28 über
    term            gehe zu Zustand 29 über
    factor          gehe zu Zustand 30 über
    id              gehe zu Zustand 31 über


Zustand 16

    5 functiondefinition: type id '(' ')' . '{' statementlist '}'

    '{'  schiebe und gehe zu Zustand 32 über


Zustand 17

    6 functiondefinition: type id '(' parameterlist . ')' '{' statementlist '}'
    8 parameterlist: parameterlist . ',' type id

    ')'  schiebe und gehe zu Zustand 33 über
    ','  schiebe und gehe zu Zustand 34 über


Zustand 18

    7 parameterlist: type . id

    "identifier"  schiebe und gehe zu Zustand 12 über

    id  gehe zu Zustand 35 über


Zustand 19

   59 factor: "integer literal" .

    $default  reduziere mit Regel 59 (factor)


Zustand 20

   60 factor: "float literal" .

    $default  reduziere mit Regel 60 (factor)


Zustand 21

   61 factor: "boolean literal" .

    $default  reduziere mit Regel 61 (factor)


Zustand 22

   48 simpexpr: '-' . term extraterm

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    term          gehe zu Zustand 36 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 23

   64 factor: '(' . assignment ')'

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall    gehe zu Zustand 24 über
    statassignment  gehe zu Zustand 25 über
    assignment      gehe zu Zustand 38 über
    expr            gehe zu Zustand 27 über
    simpexpr        gehe zu Zustand 28 über
    term            gehe zu Zustand 29 über
    factor          gehe zu Zustand 30 über
    id              gehe zu Zustand 31 über


Zustand 24

   62 factor: functioncall .

    $default  reduziere mit Regel 62 (factor)


Zustand 25

   39 assignment: statassignment .

    $default  reduziere mit Regel 39 (assignment)


Zustand 26

   37 declassignment: type id '=' assignment .

    $default  reduziere mit Regel 37 (declassignment)


Zustand 27

   40 assignment: expr .

    $default  reduziere mit Regel 40 (assignment)


Zustand 28

   41 expr: simpexpr .
   42     | simpexpr . "==" simpexpr
   43     | simpexpr . "!=" simpexpr
   44     | simpexpr . "<=" simpexpr
   45     | simpexpr . ">=" simpexpr
   46     | simpexpr . "<" simpexpr
   47     | simpexpr . ">" simpexpr

    "=="  schiebe und gehe zu Zustand 39 über
    "!="  schiebe und gehe zu Zustand 40 über
    "<="  schiebe und gehe zu Zustand 41 über
    ">="  schiebe und gehe zu Zustand 42 über
    "<"   schiebe und gehe zu Zustand 43 über
    ">"   schiebe und gehe zu Zustand 44 über

    $default  reduziere mit Regel 41 (expr)


Zustand 29

   49 simpexpr: term . extraterm

    $default  reduziere mit Regel 50 (extraterm)

    extraterm  gehe zu Zustand 45 über


Zustand 30

   54 term: factor . termneu

    $default  reduziere mit Regel 55 (termneu)

    termneu  gehe zu Zustand 46 über


Zustand 31

    9 functioncall: id . '(' ')'
   10             | id . '(' multiassignment ')'
   38 statassignment: id . '=' assignment
   63 factor: id .

    '('  schiebe und gehe zu Zustand 47 über
    '='  schiebe und gehe zu Zustand 48 über

    $default  reduziere mit Regel 63 (factor)


Zustand 32

    5 functiondefinition: type id '(' ')' '{' . statementlist '}'

    $default  reduziere mit Regel 13 (statementlist)

    statementlist  gehe zu Zustand 49 über


Zustand 33

    6 functiondefinition: type id '(' parameterlist ')' . '{' statementlist '}'

    '{'  schiebe und gehe zu Zustand 50 über


Zustand 34

    8 parameterlist: parameterlist ',' . type id

    "bool"   schiebe und gehe zu Zustand 4 über
    "float"  schiebe und gehe zu Zustand 5 über
    "int"    schiebe und gehe zu Zustand 6 über
    "void"   schiebe und gehe zu Zustand 7 über

    type  gehe zu Zustand 51 über


Zustand 35

    7 parameterlist: type id .

    $default  reduziere mit Regel 7 (parameterlist)


Zustand 36

   48 simpexpr: '-' term . extraterm

    $default  reduziere mit Regel 50 (extraterm)

    extraterm  gehe zu Zustand 52 über


Zustand 37

    9 functioncall: id . '(' ')'
   10             | id . '(' multiassignment ')'
   63 factor: id .

    '('  schiebe und gehe zu Zustand 47 über

    $default  reduziere mit Regel 63 (factor)


Zustand 38

   64 factor: '(' assignment . ')'

    ')'  schiebe und gehe zu Zustand 53 über


Zustand 39

   42 expr: simpexpr "==" . simpexpr

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    simpexpr      gehe zu Zustand 54 über
    term          gehe zu Zustand 29 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 40

   43 expr: simpexpr "!=" . simpexpr

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    simpexpr      gehe zu Zustand 55 über
    term          gehe zu Zustand 29 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 41

   44 expr: simpexpr "<=" . simpexpr

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    simpexpr      gehe zu Zustand 56 über
    term          gehe zu Zustand 29 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 42

   45 expr: simpexpr ">=" . simpexpr

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    simpexpr      gehe zu Zustand 57 über
    term          gehe zu Zustand 29 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 43

   46 expr: simpexpr "<" . simpexpr

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    simpexpr      gehe zu Zustand 58 über
    term          gehe zu Zustand 29 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 44

   47 expr: simpexpr ">" . simpexpr

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    simpexpr      gehe zu Zustand 59 über
    term          gehe zu Zustand 29 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 45

   49 simpexpr: term extraterm .
   51 extraterm: extraterm . '+' term
   52          | extraterm . '-' term
   53          | extraterm . "||" term

    "||"  schiebe und gehe zu Zustand 60 über
    '+'   schiebe und gehe zu Zustand 61 über
    '-'   schiebe und gehe zu Zustand 62 über

    $default  reduziere mit Regel 49 (simpexpr)


Zustand 46

   54 term: factor termneu .
   56 termneu: termneu . '*' factor
   57        | termneu . '/' factor
   58        | termneu . "&&" factor

    "&&"  schiebe und gehe zu Zustand 63 über
    '*'   schiebe und gehe zu Zustand 64 über
    '/'   schiebe und gehe zu Zustand 65 über

    $default  reduziere mit Regel 54 (term)


Zustand 47

    9 functioncall: id '(' . ')'
   10             | id '(' . multiassignment ')'

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über
    ')'                schiebe und gehe zu Zustand 66 über

    functioncall     gehe zu Zustand 24 über
    multiassignment  gehe zu Zustand 67 über
    statassignment   gehe zu Zustand 25 über
    assignment       gehe zu Zustand 68 über
    expr             gehe zu Zustand 27 über
    simpexpr         gehe zu Zustand 28 über
    term             gehe zu Zustand 29 über
    factor           gehe zu Zustand 30 über
    id               gehe zu Zustand 31 über


Zustand 48

   38 statassignment: id '=' . assignment

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall    gehe zu Zustand 24 über
    statassignment  gehe zu Zustand 25 über
    assignment      gehe zu Zustand 69 über
    expr            gehe zu Zustand 27 über
    simpexpr        gehe zu Zustand 28 über
    term            gehe zu Zustand 29 über
    factor          gehe zu Zustand 30 über
    id              gehe zu Zustand 31 über


Zustand 49

    5 functiondefinition: type id '(' ')' '{' statementlist . '}'
   14 statementlist: statementlist . statblock

    "bool"        schiebe und gehe zu Zustand 4 über
    "do"          schiebe und gehe zu Zustand 70 über
    "float"       schiebe und gehe zu Zustand 5 über
    "for"         schiebe und gehe zu Zustand 71 über
    "if"          schiebe und gehe zu Zustand 72 über
    "int"         schiebe und gehe zu Zustand 6 über
    "printf"      schiebe und gehe zu Zustand 73 über
    "return"      schiebe und gehe zu Zustand 74 über
    "void"        schiebe und gehe zu Zustand 7 über
    "while"       schiebe und gehe zu Zustand 75 über
    "identifier"  schiebe und gehe zu Zustand 12 über
    '{'           schiebe und gehe zu Zustand 76 über
    '}'           schiebe und gehe zu Zustand 77 über

    functioncall      gehe zu Zustand 78 über
    statement         gehe zu Zustand 79 über
    statblock         gehe zu Zustand 80 über
    ifstatement       gehe zu Zustand 81 über
    forstatement      gehe zu Zustand 82 über
    dowhilestatement  gehe zu Zustand 83 über
    whilestatement    gehe zu Zustand 84 über
    returnstatement   gehe zu Zustand 85 über
    printf            gehe zu Zustand 86 über
    declassignment    gehe zu Zustand 87 über
    statassignment    gehe zu Zustand 88 über
    type              gehe zu Zustand 89 über
    id                gehe zu Zustand 90 über


Zustand 50

    6 functiondefinition: type id '(' parameterlist ')' '{' . statementlist '}'

    $default  reduziere mit Regel 13 (statementlist)

    statementlist  gehe zu Zustand 91 über


Zustand 51

    8 parameterlist: parameterlist ',' type . id

    "identifier"  schiebe und gehe zu Zustand 12 über

    id  gehe zu Zustand 92 über


Zustand 52

   48 simpexpr: '-' term extraterm .
   51 extraterm: extraterm . '+' term
   52          | extraterm . '-' term
   53          | extraterm . "||" term

    "||"  schiebe und gehe zu Zustand 60 über
    '+'   schiebe und gehe zu Zustand 61 über
    '-'   schiebe und gehe zu Zustand 62 über

    $default  reduziere mit Regel 48 (simpexpr)


Zustand 53

   64 factor: '(' assignment ')' .

    $default  reduziere mit Regel 64 (factor)


Zustand 54

   42 expr: simpexpr "==" simpexpr .

    $default  reduziere mit Regel 42 (expr)


Zustand 55

   43 expr: simpexpr "!=" simpexpr .

    $default  reduziere mit Regel 43 (expr)


Zustand 56

   44 expr: simpexpr "<=" simpexpr .

    $default  reduziere mit Regel 44 (expr)


Zustand 57

   45 expr: simpexpr ">=" simpexpr .

    $default  reduziere mit Regel 45 (expr)


Zustand 58

   46 expr: simpexpr "<" simpexpr .

    $default  reduziere mit Regel 46 (expr)


Zustand 59

   47 expr: simpexpr ">" simpexpr .

    $default  reduziere mit Regel 47 (expr)


Zustand 60

   53 extraterm: extraterm "||" . term

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    term          gehe zu Zustand 93 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 61

   51 extraterm: extraterm '+' . term

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    term          gehe zu Zustand 94 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 62

   52 extraterm: extraterm '-' . term

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    term          gehe zu Zustand 95 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 63

   58 termneu: termneu "&&" . factor

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    factor        gehe zu Zustand 96 über
    id            gehe zu Zustand 37 über


Zustand 64

   56 termneu: termneu '*' . factor

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    factor        gehe zu Zustand 97 über
    id            gehe zu Zustand 37 über


Zustand 65

   57 termneu: termneu '/' . factor

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    factor        gehe zu Zustand 98 über
    id            gehe zu Zustand 37 über


Zustand 66

    9 functioncall: id '(' ')' .

    $default  reduziere mit Regel 9 (functioncall)


Zustand 67

   10 functioncall: id '(' multiassignment . ')'
   12 multiassignment: multiassignment . ',' assignment

    ')'  schiebe und gehe zu Zustand 99 über
    ','  schiebe und gehe zu Zustand 100 über


Zustand 68

   11 multiassignment: assignment .

    $default  reduziere mit Regel 11 (multiassignment)


Zustand 69

   38 statassignment: id '=' assignment .

    $default  reduziere mit Regel 38 (statassignment)


Zustand 70

   30 dowhilestatement: "do" . statblock "while" '(' assignment ')'

    "bool"        schiebe und gehe zu Zustand 4 über
    "do"          schiebe und gehe zu Zustand 70 über
    "float"       schiebe und gehe zu Zustand 5 über
    "for"         schiebe und gehe zu Zustand 71 über
    "if"          schiebe und gehe zu Zustand 72 über
    "int"         schiebe und gehe zu Zustand 6 über
    "printf"      schiebe und gehe zu Zustand 73 über
    "return"      schiebe und gehe zu Zustand 74 über
    "void"        schiebe und gehe zu Zustand 7 über
    "while"       schiebe und gehe zu Zustand 75 über
    "identifier"  schiebe und gehe zu Zustand 12 über
    '{'           schiebe und gehe zu Zustand 76 über

    functioncall      gehe zu Zustand 78 über
    statement         gehe zu Zustand 79 über
    statblock         gehe zu Zustand 101 über
    ifstatement       gehe zu Zustand 81 über
    forstatement      gehe zu Zustand 82 über
    dowhilestatement  gehe zu Zustand 83 über
    whilestatement    gehe zu Zustand 84 über
    returnstatement   gehe zu Zustand 85 über
    printf            gehe zu Zustand 86 über
    declassignment    gehe zu Zustand 87 über
    statassignment    gehe zu Zustand 88 über
    type              gehe zu Zustand 89 über
    id                gehe zu Zustand 90 über


Zustand 71

   28 forstatement: "for" . '(' statassignment ';' expr ';' statassignment ')' statblock
   29             | "for" . '(' declassignment ';' expr ';' statassignment ')' statblock

    '('  schiebe und gehe zu Zustand 102 über


Zustand 72

   26 ifstatement: "if" . '(' assignment ')' statblock
   27            | "if" . '(' assignment ')' statblock "else" statblock

    '('  schiebe und gehe zu Zustand 103 über


Zustand 73

   34 printf: "printf" . '(' assignment ')'
   35       | "printf" . '(' "string literal" ')'

    '('  schiebe und gehe zu Zustand 104 über


Zustand 74

   32 returnstatement: "return" .
   33                | "return" . assignment

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    $default  reduziere mit Regel 32 (returnstatement)

    functioncall    gehe zu Zustand 24 über
    statassignment  gehe zu Zustand 25 über
    assignment      gehe zu Zustand 105 über
    expr            gehe zu Zustand 27 über
    simpexpr        gehe zu Zustand 28 über
    term            gehe zu Zustand 29 über
    factor          gehe zu Zustand 30 über
    id              gehe zu Zustand 31 über


Zustand 75

   31 whilestatement: "while" . '(' assignment ')' statblock

    '('  schiebe und gehe zu Zustand 106 über


Zustand 76

   24 statblock: '{' . statementlist '}'

    $default  reduziere mit Regel 13 (statementlist)

    statementlist  gehe zu Zustand 107 über


Zustand 77

    5 functiondefinition: type id '(' ')' '{' statementlist '}' .

    $default  reduziere mit Regel 5 (functiondefinition)


Zustand 78

   23 statement: functioncall . ';'

    ';'  schiebe und gehe zu Zustand 108 über


Zustand 79

   25 statblock: statement .

    $default  reduziere mit Regel 25 (statblock)


Zustand 80

   14 statementlist: statementlist statblock .

    $default  reduziere mit Regel 14 (statementlist)


Zustand 81

   15 statement: ifstatement .

    $default  reduziere mit Regel 15 (statement)


Zustand 82

   16 statement: forstatement .

    $default  reduziere mit Regel 16 (statement)


Zustand 83

   19 statement: dowhilestatement . ';'

    ';'  schiebe und gehe zu Zustand 109 über


Zustand 84

   17 statement: whilestatement .

    $default  reduziere mit Regel 17 (statement)


Zustand 85

   18 statement: returnstatement . ';'

    ';'  schiebe und gehe zu Zustand 110 über


Zustand 86

   20 statement: printf . ';'

    ';'  schiebe und gehe zu Zustand 111 über


Zustand 87

   21 statement: declassignment . ';'

    ';'  schiebe und gehe zu Zustand 112 über


Zustand 88

   22 statement: statassignment . ';'

    ';'  schiebe und gehe zu Zustand 113 über


Zustand 89

   36 declassignment: type . id
   37               | type . id '=' assignment

    "identifier"  schiebe und gehe zu Zustand 12 über

    id  gehe zu Zustand 114 über


Zustand 90

    9 functioncall: id . '(' ')'
   10             | id . '(' multiassignment ')'
   38 statassignment: id . '=' assignment

    '('  schiebe und gehe zu Zustand 47 über
    '='  schiebe und gehe zu Zustand 48 über


Zustand 91

    6 functiondefinition: type id '(' parameterlist ')' '{' statementlist . '}'
   14 statementlist: statementlist . statblock

    "bool"        schiebe und gehe zu Zustand 4 über
    "do"          schiebe und gehe zu Zustand 70 über
    "float"       schiebe und gehe zu Zustand 5 über
    "for"         schiebe und gehe zu Zustand 71 über
    "if"          schiebe und gehe zu Zustand 72 über
    "int"         schiebe und gehe zu Zustand 6 über
    "printf"      schiebe und gehe zu Zustand 73 über
    "return"      schiebe und gehe zu Zustand 74 über
    "void"        schiebe und gehe zu Zustand 7 über
    "while"       schiebe und gehe zu Zustand 75 über
    "identifier"  schiebe und gehe zu Zustand 12 über
    '{'           schiebe und gehe zu Zustand 76 über
    '}'           schiebe und gehe zu Zustand 115 über

    functioncall      gehe zu Zustand 78 über
    statement         gehe zu Zustand 79 über
    statblock         gehe zu Zustand 80 über
    ifstatement       gehe zu Zustand 81 über
    forstatement      gehe zu Zustand 82 über
    dowhilestatement  gehe zu Zustand 83 über
    whilestatement    gehe zu Zustand 84 über
    returnstatement   gehe zu Zustand 85 über
    printf            gehe zu Zustand 86 über
    declassignment    gehe zu Zustand 87 über
    statassignment    gehe zu Zustand 88 über
    type              gehe zu Zustand 89 über
    id                gehe zu Zustand 90 über


Zustand 92

    8 parameterlist: parameterlist ',' type id .

    $default  reduziere mit Regel 8 (parameterlist)


Zustand 93

   53 extraterm: extraterm "||" term .

    $default  reduziere mit Regel 53 (extraterm)


Zustand 94

   51 extraterm: extraterm '+' term .

    $default  reduziere mit Regel 51 (extraterm)


Zustand 95

   52 extraterm: extraterm '-' term .

    $default  reduziere mit Regel 52 (extraterm)


Zustand 96

   58 termneu: termneu "&&" factor .

    $default  reduziere mit Regel 58 (termneu)


Zustand 97

   56 termneu: termneu '*' factor .

    $default  reduziere mit Regel 56 (termneu)


Zustand 98

   57 termneu: termneu '/' factor .

    $default  reduziere mit Regel 57 (termneu)


Zustand 99

   10 functioncall: id '(' multiassignment ')' .

    $default  reduziere mit Regel 10 (functioncall)


Zustand 100

   12 multiassignment: multiassignment ',' . assignment

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall    gehe zu Zustand 24 über
    statassignment  gehe zu Zustand 25 über
    assignment      gehe zu Zustand 116 über
    expr            gehe zu Zustand 27 über
    simpexpr        gehe zu Zustand 28 über
    term            gehe zu Zustand 29 über
    factor          gehe zu Zustand 30 über
    id              gehe zu Zustand 31 über


Zustand 101

   30 dowhilestatement: "do" statblock . "while" '(' assignment ')'

    "while"  schiebe und gehe zu Zustand 117 über


Zustand 102

   28 forstatement: "for" '(' . statassignment ';' expr ';' statassignment ')' statblock
   29             | "for" '(' . declassignment ';' expr ';' statassignment ')' statblock

    "bool"        schiebe und gehe zu Zustand 4 über
    "float"       schiebe und gehe zu Zustand 5 über
    "int"         schiebe und gehe zu Zustand 6 über
    "void"        schiebe und gehe zu Zustand 7 über
    "identifier"  schiebe und gehe zu Zustand 12 über

    declassignment  gehe zu Zustand 118 über
    statassignment  gehe zu Zustand 119 über
    type            gehe zu Zustand 89 über
    id              gehe zu Zustand 120 über


Zustand 103

   26 ifstatement: "if" '(' . assignment ')' statblock
   27            | "if" '(' . assignment ')' statblock "else" statblock

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall    gehe zu Zustand 24 über
    statassignment  gehe zu Zustand 25 über
    assignment      gehe zu Zustand 121 über
    expr            gehe zu Zustand 27 über
    simpexpr        gehe zu Zustand 28 über
    term            gehe zu Zustand 29 über
    factor          gehe zu Zustand 30 über
    id              gehe zu Zustand 31 über


Zustand 104

   34 printf: "printf" '(' . assignment ')'
   35       | "printf" '(' . "string literal" ')'

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "string literal"   schiebe und gehe zu Zustand 122 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall    gehe zu Zustand 24 über
    statassignment  gehe zu Zustand 25 über
    assignment      gehe zu Zustand 123 über
    expr            gehe zu Zustand 27 über
    simpexpr        gehe zu Zustand 28 über
    term            gehe zu Zustand 29 über
    factor          gehe zu Zustand 30 über
    id              gehe zu Zustand 31 über


Zustand 105

   33 returnstatement: "return" assignment .

    $default  reduziere mit Regel 33 (returnstatement)


Zustand 106

   31 whilestatement: "while" '(' . assignment ')' statblock

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall    gehe zu Zustand 24 über
    statassignment  gehe zu Zustand 25 über
    assignment      gehe zu Zustand 124 über
    expr            gehe zu Zustand 27 über
    simpexpr        gehe zu Zustand 28 über
    term            gehe zu Zustand 29 über
    factor          gehe zu Zustand 30 über
    id              gehe zu Zustand 31 über


Zustand 107

   14 statementlist: statementlist . statblock
   24 statblock: '{' statementlist . '}'

    "bool"        schiebe und gehe zu Zustand 4 über
    "do"          schiebe und gehe zu Zustand 70 über
    "float"       schiebe und gehe zu Zustand 5 über
    "for"         schiebe und gehe zu Zustand 71 über
    "if"          schiebe und gehe zu Zustand 72 über
    "int"         schiebe und gehe zu Zustand 6 über
    "printf"      schiebe und gehe zu Zustand 73 über
    "return"      schiebe und gehe zu Zustand 74 über
    "void"        schiebe und gehe zu Zustand 7 über
    "while"       schiebe und gehe zu Zustand 75 über
    "identifier"  schiebe und gehe zu Zustand 12 über
    '{'           schiebe und gehe zu Zustand 76 über
    '}'           schiebe und gehe zu Zustand 125 über

    functioncall      gehe zu Zustand 78 über
    statement         gehe zu Zustand 79 über
    statblock         gehe zu Zustand 80 über
    ifstatement       gehe zu Zustand 81 über
    forstatement      gehe zu Zustand 82 über
    dowhilestatement  gehe zu Zustand 83 über
    whilestatement    gehe zu Zustand 84 über
    returnstatement   gehe zu Zustand 85 über
    printf            gehe zu Zustand 86 über
    declassignment    gehe zu Zustand 87 über
    statassignment    gehe zu Zustand 88 über
    type              gehe zu Zustand 89 über
    id                gehe zu Zustand 90 über


Zustand 108

   23 statement: functioncall ';' .

    $default  reduziere mit Regel 23 (statement)


Zustand 109

   19 statement: dowhilestatement ';' .

    $default  reduziere mit Regel 19 (statement)


Zustand 110

   18 statement: returnstatement ';' .

    $default  reduziere mit Regel 18 (statement)


Zustand 111

   20 statement: printf ';' .

    $default  reduziere mit Regel 20 (statement)


Zustand 112

   21 statement: declassignment ';' .

    $default  reduziere mit Regel 21 (statement)


Zustand 113

   22 statement: statassignment ';' .

    $default  reduziere mit Regel 22 (statement)


Zustand 114

   36 declassignment: type id .
   37               | type id . '=' assignment

    '='  schiebe und gehe zu Zustand 15 über

    $default  reduziere mit Regel 36 (declassignment)


Zustand 115

    6 functiondefinition: type id '(' parameterlist ')' '{' statementlist '}' .

    $default  reduziere mit Regel 6 (functiondefinition)


Zustand 116

   12 multiassignment: multiassignment ',' assignment .

    $default  reduziere mit Regel 12 (multiassignment)


Zustand 117

   30 dowhilestatement: "do" statblock "while" . '(' assignment ')'

    '('  schiebe und gehe zu Zustand 126 über


Zustand 118

   29 forstatement: "for" '(' declassignment . ';' expr ';' statassignment ')' statblock

    ';'  schiebe und gehe zu Zustand 127 über


Zustand 119

   28 forstatement: "for" '(' statassignment . ';' expr ';' statassignment ')' statblock

    ';'  schiebe und gehe zu Zustand 128 über


Zustand 120

   38 statassignment: id . '=' assignment

    '='  schiebe und gehe zu Zustand 48 über


Zustand 121

   26 ifstatement: "if" '(' assignment . ')' statblock
   27            | "if" '(' assignment . ')' statblock "else" statblock

    ')'  schiebe und gehe zu Zustand 129 über


Zustand 122

   35 printf: "printf" '(' "string literal" . ')'

    ')'  schiebe und gehe zu Zustand 130 über


Zustand 123

   34 printf: "printf" '(' assignment . ')'

    ')'  schiebe und gehe zu Zustand 131 über


Zustand 124

   31 whilestatement: "while" '(' assignment . ')' statblock

    ')'  schiebe und gehe zu Zustand 132 über


Zustand 125

   24 statblock: '{' statementlist '}' .

    $default  reduziere mit Regel 24 (statblock)


Zustand 126

   30 dowhilestatement: "do" statblock "while" '(' . assignment ')'

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall    gehe zu Zustand 24 über
    statassignment  gehe zu Zustand 25 über
    assignment      gehe zu Zustand 133 über
    expr            gehe zu Zustand 27 über
    simpexpr        gehe zu Zustand 28 über
    term            gehe zu Zustand 29 über
    factor          gehe zu Zustand 30 über
    id              gehe zu Zustand 31 über


Zustand 127

   29 forstatement: "for" '(' declassignment ';' . expr ';' statassignment ')' statblock

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    expr          gehe zu Zustand 134 über
    simpexpr      gehe zu Zustand 28 über
    term          gehe zu Zustand 29 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 128

   28 forstatement: "for" '(' statassignment ';' . expr ';' statassignment ')' statblock

    "integer literal"  schiebe und gehe zu Zustand 19 über
    "float literal"    schiebe und gehe zu Zustand 20 über
    "boolean literal"  schiebe und gehe zu Zustand 21 über
    "identifier"       schiebe und gehe zu Zustand 12 über
    '-'                schiebe und gehe zu Zustand 22 über
    '('                schiebe und gehe zu Zustand 23 über

    functioncall  gehe zu Zustand 24 über
    expr          gehe zu Zustand 135 über
    simpexpr      gehe zu Zustand 28 über
    term          gehe zu Zustand 29 über
    factor        gehe zu Zustand 30 über
    id            gehe zu Zustand 37 über


Zustand 129

   26 ifstatement: "if" '(' assignment ')' . statblock
   27            | "if" '(' assignment ')' . statblock "else" statblock

    "bool"        schiebe und gehe zu Zustand 4 über
    "do"          schiebe und gehe zu Zustand 70 über
    "float"       schiebe und gehe zu Zustand 5 über
    "for"         schiebe und gehe zu Zustand 71 über
    "if"          schiebe und gehe zu Zustand 72 über
    "int"         schiebe und gehe zu Zustand 6 über
    "printf"      schiebe und gehe zu Zustand 73 über
    "return"      schiebe und gehe zu Zustand 74 über
    "void"        schiebe und gehe zu Zustand 7 über
    "while"       schiebe und gehe zu Zustand 75 über
    "identifier"  schiebe und gehe zu Zustand 12 über
    '{'           schiebe und gehe zu Zustand 76 über

    functioncall      gehe zu Zustand 78 über
    statement         gehe zu Zustand 79 über
    statblock         gehe zu Zustand 136 über
    ifstatement       gehe zu Zustand 81 über
    forstatement      gehe zu Zustand 82 über
    dowhilestatement  gehe zu Zustand 83 über
    whilestatement    gehe zu Zustand 84 über
    returnstatement   gehe zu Zustand 85 über
    printf            gehe zu Zustand 86 über
    declassignment    gehe zu Zustand 87 über
    statassignment    gehe zu Zustand 88 über
    type              gehe zu Zustand 89 über
    id                gehe zu Zustand 90 über


Zustand 130

   35 printf: "printf" '(' "string literal" ')' .

    $default  reduziere mit Regel 35 (printf)


Zustand 131

   34 printf: "printf" '(' assignment ')' .

    $default  reduziere mit Regel 34 (printf)


Zustand 132

   31 whilestatement: "while" '(' assignment ')' . statblock

    "bool"        schiebe und gehe zu Zustand 4 über
    "do"          schiebe und gehe zu Zustand 70 über
    "float"       schiebe und gehe zu Zustand 5 über
    "for"         schiebe und gehe zu Zustand 71 über
    "if"          schiebe und gehe zu Zustand 72 über
    "int"         schiebe und gehe zu Zustand 6 über
    "printf"      schiebe und gehe zu Zustand 73 über
    "return"      schiebe und gehe zu Zustand 74 über
    "void"        schiebe und gehe zu Zustand 7 über
    "while"       schiebe und gehe zu Zustand 75 über
    "identifier"  schiebe und gehe zu Zustand 12 über
    '{'           schiebe und gehe zu Zustand 76 über

    functioncall      gehe zu Zustand 78 über
    statement         gehe zu Zustand 79 über
    statblock         gehe zu Zustand 137 über
    ifstatement       gehe zu Zustand 81 über
    forstatement      gehe zu Zustand 82 über
    dowhilestatement  gehe zu Zustand 83 über
    whilestatement    gehe zu Zustand 84 über
    returnstatement   gehe zu Zustand 85 über
    printf            gehe zu Zustand 86 über
    declassignment    gehe zu Zustand 87 über
    statassignment    gehe zu Zustand 88 über
    type              gehe zu Zustand 89 über
    id                gehe zu Zustand 90 über


Zustand 133

   30 dowhilestatement: "do" statblock "while" '(' assignment . ')'

    ')'  schiebe und gehe zu Zustand 138 über


Zustand 134

   29 forstatement: "for" '(' declassignment ';' expr . ';' statassignment ')' statblock

    ';'  schiebe und gehe zu Zustand 139 über


Zustand 135

   28 forstatement: "for" '(' statassignment ';' expr . ';' statassignment ')' statblock

    ';'  schiebe und gehe zu Zustand 140 über


Zustand 136

   26 ifstatement: "if" '(' assignment ')' statblock .
   27            | "if" '(' assignment ')' statblock . "else" statblock

    "else"  schiebe und gehe zu Zustand 141 über

    "else"    [reduziere mit Regel 26 (ifstatement)]
    $default  reduziere mit Regel 26 (ifstatement)


Zustand 137

   31 whilestatement: "while" '(' assignment ')' statblock .

    $default  reduziere mit Regel 31 (whilestatement)


Zustand 138

   30 dowhilestatement: "do" statblock "while" '(' assignment ')' .

    $default  reduziere mit Regel 30 (dowhilestatement)


Zustand 139

   29 forstatement: "for" '(' declassignment ';' expr ';' . statassignment ')' statblock

    "identifier"  schiebe und gehe zu Zustand 12 über

    statassignment  gehe zu Zustand 142 über
    id              gehe zu Zustand 120 über


Zustand 140

   28 forstatement: "for" '(' statassignment ';' expr ';' . statassignment ')' statblock

    "identifier"  schiebe und gehe zu Zustand 12 über

    statassignment  gehe zu Zustand 143 über
    id              gehe zu Zustand 120 über


Zustand 141

   27 ifstatement: "if" '(' assignment ')' statblock "else" . statblock

    "bool"        schiebe und gehe zu Zustand 4 über
    "do"          schiebe und gehe zu Zustand 70 über
    "float"       schiebe und gehe zu Zustand 5 über
    "for"         schiebe und gehe zu Zustand 71 über
    "if"          schiebe und gehe zu Zustand 72 über
    "int"         schiebe und gehe zu Zustand 6 über
    "printf"      schiebe und gehe zu Zustand 73 über
    "return"      schiebe und gehe zu Zustand 74 über
    "void"        schiebe und gehe zu Zustand 7 über
    "while"       schiebe und gehe zu Zustand 75 über
    "identifier"  schiebe und gehe zu Zustand 12 über
    '{'           schiebe und gehe zu Zustand 76 über

    functioncall      gehe zu Zustand 78 über
    statement         gehe zu Zustand 79 über
    statblock         gehe zu Zustand 144 über
    ifstatement       gehe zu Zustand 81 über
    forstatement      gehe zu Zustand 82 über
    dowhilestatement  gehe zu Zustand 83 über
    whilestatement    gehe zu Zustand 84 über
    returnstatement   gehe zu Zustand 85 über
    printf            gehe zu Zustand 86 über
    declassignment    gehe zu Zustand 87 über
    statassignment    gehe zu Zustand 88 über
    type              gehe zu Zustand 89 über
    id                gehe zu Zustand 90 über


Zustand 142

   29 forstatement: "for" '(' declassignment ';' expr ';' statassignment . ')' statblock

    ')'  schiebe und gehe zu Zustand 145 über


Zustand 143

   28 forstatement: "for" '(' statassignment ';' expr ';' statassignment . ')' statblock

    ')'  schiebe und gehe zu Zustand 146 über


Zustand 144

   27 ifstatement: "if" '(' assignment ')' statblock "else" statblock .

    $default  reduziere mit Regel 27 (ifstatement)


Zustand 145

   29 forstatement: "for" '(' declassignment ';' expr ';' statassignment ')' . statblock

    "bool"        schiebe und gehe zu Zustand 4 über
    "do"          schiebe und gehe zu Zustand 70 über
    "float"       schiebe und gehe zu Zustand 5 über
    "for"         schiebe und gehe zu Zustand 71 über
    "if"          schiebe und gehe zu Zustand 72 über
    "int"         schiebe und gehe zu Zustand 6 über
    "printf"      schiebe und gehe zu Zustand 73 über
    "return"      schiebe und gehe zu Zustand 74 über
    "void"        schiebe und gehe zu Zustand 7 über
    "while"       schiebe und gehe zu Zustand 75 über
    "identifier"  schiebe und gehe zu Zustand 12 über
    '{'           schiebe und gehe zu Zustand 76 über

    functioncall      gehe zu Zustand 78 über
    statement         gehe zu Zustand 79 über
    statblock         gehe zu Zustand 147 über
    ifstatement       gehe zu Zustand 81 über
    forstatement      gehe zu Zustand 82 über
    dowhilestatement  gehe zu Zustand 83 über
    whilestatement    gehe zu Zustand 84 über
    returnstatement   gehe zu Zustand 85 über
    printf            gehe zu Zustand 86 über
    declassignment    gehe zu Zustand 87 über
    statassignment    gehe zu Zustand 88 über
    type              gehe zu Zustand 89 über
    id                gehe zu Zustand 90 über


Zustand 146

   28 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' . statblock

    "bool"        schiebe und gehe zu Zustand 4 über
    "do"          schiebe und gehe zu Zustand 70 über
    "float"       schiebe und gehe zu Zustand 5 über
    "for"         schiebe und gehe zu Zustand 71 über
    "if"          schiebe und gehe zu Zustand 72 über
    "int"         schiebe und gehe zu Zustand 6 über
    "printf"      schiebe und gehe zu Zustand 73 über
    "return"      schiebe und gehe zu Zustand 74 über
    "void"        schiebe und gehe zu Zustand 7 über
    "while"       schiebe und gehe zu Zustand 75 über
    "identifier"  schiebe und gehe zu Zustand 12 über
    '{'           schiebe und gehe zu Zustand 76 über

    functioncall      gehe zu Zustand 78 über
    statement         gehe zu Zustand 79 über
    statblock         gehe zu Zustand 148 über
    ifstatement       gehe zu Zustand 81 über
    forstatement      gehe zu Zustand 82 über
    dowhilestatement  gehe zu Zustand 83 über
    whilestatement    gehe zu Zustand 84 über
    returnstatement   gehe zu Zustand 85 über
    printf            gehe zu Zustand 86 über
    declassignment    gehe zu Zustand 87 über
    statassignment    gehe zu Zustand 88 über
    type              gehe zu Zustand 89 über
    id                gehe zu Zustand 90 über


Zustand 147

   29 forstatement: "for" '(' declassignment ';' expr ';' statassignment ')' statblock .

    $default  reduziere mit Regel 29 (forstatement)


Zustand 148

   28 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' statblock .

    $default  reduziere mit Regel 28 (forstatement)
